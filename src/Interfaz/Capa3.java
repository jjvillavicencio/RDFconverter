package Interfaz;

import Clases.ConexionSGBD;
import Clases.TablaAlias;
import Clases.VariablesGlobales;
import Clases.Visualizador;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * 
 * @author John Villavicencio
 * @author Vanessa Sotomayor
 * @author Jackson Masache
 * 
 * 
 **/


public class Capa3 extends javax.swing.JFrame {

    //Variables Públicas
    ArrayList tablas = new ArrayList();
    ConexionSGBD conSGBD = new ConexionSGBD();
    TablaAlias datosTabla = new TablaAlias();

    public DefaultTableModel borrarTabla(DefaultTableModel modelo) {

        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
        return modelo;
    }

    public Capa3() {
        initComponents();
        //Recuperamos los valores de conexion almacenados en variables globales
        conSGBD = VariablesGlobales.conMySqlGlobal;
        //Obtenemos todas las tablas de la base de datos
        tablas = conSGBD.getTodasTablas();
        //Presentamos en un ComboBox las tablas de la BD
        for (int i = 0; i < tablas.size(); i++) {
            jcb_Tablas.addItem(tablas.get(i));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jcb_Tablas = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jb_Seleccionar = new javax.swing.JButton();
        jb_Iniciar = new javax.swing.JButton();
        jb_Salir = new javax.swing.JButton();
        jb_Seleccionar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Seleccione la tabla a convertir:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Datos", "Alias", "Key"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jb_Seleccionar.setText("Seleccionar");
        jb_Seleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_SeleccionarActionPerformed(evt);
            }
        });

        jb_Iniciar.setText("Iniciar");
        jb_Iniciar.setEnabled(false);
        jb_Iniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_IniciarActionPerformed(evt);
            }
        });

        jb_Salir.setText("Salir");
        jb_Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_SalirActionPerformed(evt);
            }
        });

        jb_Seleccionar1.setText("Borrar");
        jb_Seleccionar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_Seleccionar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcb_Tablas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_Seleccionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_Seleccionar1)))
                .addGap(27, 27, 27))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(477, Short.MAX_VALUE)
                .addComponent(jb_Iniciar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jb_Salir))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcb_Tablas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jb_Seleccionar)
                    .addComponent(jb_Seleccionar1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_Iniciar)
                    .addComponent(jb_Salir)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jb_SeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_SeleccionarActionPerformed

        //Obtener descripcion de la tabla
        if (this.conSGBD.describirTabla(conSGBD.getConexionMySQL(), jcb_Tablas.getSelectedItem().toString())) {
            //Obtener modelo de la Tabla
            DefaultTableModel modeloDeMiTabla = (DefaultTableModel) jTable1.getModel();
            //Borrar contenido de la tabla
            modeloDeMiTabla = borrarTabla(modeloDeMiTabla);
            //Obtener la descripción de la Tabla (columnas, clave primaria)
            datosTabla = conSGBD.getDesTablaALias();
            //Establecer tamaño del arreglo de objetos tipo Alias(Original, Alias, Key)
            datosTabla.setTamaño();
            //recorrer el Arreglo de Objetos tipo Alias
            for (int i = 0; i < datosTabla.getTamaño(); i++) {
                //Agregar una fila al modelo de la tabla
                modeloDeMiTabla.addRow(new Object[i]);
                //Insertar en celda de la tabla el campo Original del objeto Alias dentro del Arreglo de objetos Alias
                jTable1.setValueAt(datosTabla.getTablaAlias().get(i).getOriginal(), i, 0);
                //Insertar en celda de la tabla el campo Alias del objeto Alias dentro del Arreglo de objetos Alias
                jTable1.setValueAt(datosTabla.getTablaAlias().get(i).getAlias(), i, 1);
                //Insertar en celda de la tabla el campo Key del objeto Alias dentro del Arreglo de objetos Alias
                jTable1.setValueAt(datosTabla.getTablaAlias().get(i).getKey(), i, 2);
            }
            jb_Iniciar.setEnabled(true);
        }else{
            jb_Iniciar.setEnabled(false);
        }

    }//GEN-LAST:event_jb_SeleccionarActionPerformed

    private void jb_IniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_IniciarActionPerformed
        int cont = 0;
        try {
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                datosTabla.getTablaAlias().get(i).setAlias(jTable1.getValueAt(i, 1).toString());
                System.out.println("====>" + jTable1.getValueAt(i, 1).toString());
                if (jTable1.getValueAt(i, 1).toString() == null || jTable1.getValueAt(i, 1).toString().isEmpty() || jTable1.getValueAt(i, 1).toString() == " ") {
                    cont = cont + 1;
                    System.out.println(cont);
                }
            }
            datosTabla.setTamaño();

        } catch (NullPointerException ex) {
            JOptionPane.showConfirmDialog(null, "No ingresó los alias");
        }
        if (cont == 0) {
            if (conSGBD.crearTablaRdf(datosTabla)) {
                VariablesGlobales.conMySqlGlobal = conSGBD;
                Visualizador nuevo = new Visualizador();
                nuevo.setVisible(true);
                this.dispose();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "No estan todos los alias");
        }

    }//GEN-LAST:event_jb_IniciarActionPerformed

    private void jb_SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_SalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jb_SalirActionPerformed

    private void jb_Seleccionar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_Seleccionar1ActionPerformed

        DefaultTableModel modelo = borrarTabla((DefaultTableModel) jTable1.getModel());
        jTable1.setModel(modelo);
        conSGBD.resetDesTablaALias();
    }//GEN-LAST:event_jb_Seleccionar1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Capa3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Capa3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Capa3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Capa3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Capa3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jb_Iniciar;
    private javax.swing.JButton jb_Salir;
    private javax.swing.JButton jb_Seleccionar;
    private javax.swing.JButton jb_Seleccionar1;
    private javax.swing.JComboBox jcb_Tablas;
    // End of variables declaration//GEN-END:variables
}
